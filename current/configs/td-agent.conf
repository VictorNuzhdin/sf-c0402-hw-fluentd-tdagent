####
## Source descriptions
##

##..Source Section :: Input Plugin
#
# HTTP input
# POST http://localhost:8888/<tag>?json=<json>
# POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
<source>
  @type http
  @id input_http
  port 8888
</source>

## live debugging agent
<source>
  @type debug_agent
  @id input_debug_agent
  bind 127.0.0.1
  port 24230
</source>


####
## Output descriptions
##

## match tag=debug.** and dump to console
<match debug.**>
  @type stdout
  @id output_stdout
</match>

## CUSTOM_OUTPUT #3.3
##
## event examples:
##   - hosts.logs {"source": "srv", ..}
##   - hosts.logs {"source": "host1", ..}
##   - hosts.logs {"source": "host2", ..}
##
## match "tag=hosts.logs",
##       if json-content:
##          - source: srv   -> null
##          - source: host1 -> /opt/fluent/logs/host1/host1.hosts.logs.20231102203630.json
##          - source: host2 -> /opt/fluent/logs/host2/host2.hosts.logs.20231102203630.json
#
##..Match Section :: Output Plugin + grep
##  getting "source" value from json message an adding extra key to base tag (ex: srv.hosts.logs, host1.hosts.log)
<match hosts.**>
  @type rewrite_tag_filter
  <rule>
    key source
    pattern (\w+)
    tag $1.${tag}
  </rule>
</match>

##..Match Section :: Output Plugin -> null
##  send messages from "source:srv" to null (ignore)
<match srv.hosts.logs>
  @type null
  #
  ##..test: save to file
  #@type file
  #path /opt/fluent/logs/null/null.${tag}
  #append true
  #add_path_suffix true
  #path_suffix ".json"
  #<format>
  #  @type json
  #</format>
  #<buffer tag,time>
  #  @type file
  #  path /opt/fluent/logs/null
  #  timekey 30s
  #  timekey_wait 0s
  #  chunk_limit_records 100
  #  chunk_limit_size 32MB/32MB
  #  total_limit_size 64MB/64MB
  #  queue_limit_length 128
  #</buffer>
</match>

##..Match Section :: Output Plugin -> file.json
##  save other messages to host-subfolder to json file
<match *.hosts.logs>
  @type file
  path /opt/fluent/logs/${tag[0]}/${tag}
  append true
  add_path_suffix true
  path_suffix ".json"
  #
  ##..Format Section :: Formatter Plugin
  ##  https://docs.fluentd.org/configuration/format-section
  <format>
    @type json
  </format>
  #
  ##..Inject Section
  ##  https://docs.fluentd.org/configuration/inject-section
  <inject>
    hostname_key receiver
    time_key dt
    time_type string
    time_format %Y-%m-%dT%H:%M:%S%z
    ##..examples:
    ##     "receiver": "host1"
    ##     "dt": "2023-11-02T20:54:24+0600"
    ##
  </inject>
  #
  ##..Buffer Section
  ##  https://docs.fluentd.org/configuration/buffer-section
  <buffer tag,time>
    @type file
    path /opt/fluent/logs
    timekey 30s
    timekey_wait 0s
    chunk_limit_records 100
    chunk_limit_size 32MB/32MB
    total_limit_size 64MB/64MB
    queue_limit_length 128
  </buffer>
</match>
